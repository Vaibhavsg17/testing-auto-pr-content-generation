name: Automatic PR Content Generator

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - '.github/workflows/**'
  workflow_dispatch: # Manual trigger
    inputs:
      base_ref:
        description: "Base branch for manual trigger (default: main)"
        required: false
        default: "main"
      head_ref:
        description: "Head branch for manual trigger (default: feature)"
        required: false
        default: "feature"

jobs:
  prepare_and_generate_content:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Get diff of the pull request
        id: get_diff
        shell: bash
        run: |
          # Determine base and head refs
          BASE_REF="${{ github.event.pull_request.base.ref || github.event.inputs.base_ref }}"
          HEAD_REF="${{ github.event.pull_request.head.ref || github.event.inputs.head_ref }}"

          # Fetch branches and generate diff
          git fetch origin "$HEAD_REF" || echo "Failed to fetch head branch $HEAD_REF"
          git fetch origin "$BASE_REF" || echo "Failed to fetch base branch $BASE_REF"
          git diff "origin/$BASE_REF" > "diff.txt" || echo "Git diff failed"

          # Validate diff file content
          if [ ! -s diff.txt ]; then
            echo "No changes detected or invalid diff file. Exiting gracefully."
            exit 0
          fi

          # Save diff output to GitHub Actions output
          {
            echo "pull_request_diff<<EOF";
            cat "diff.txt";
            echo 'EOF';
          } >> $GITHUB_OUTPUT

      - name: Set API Provider (if needed)
        run: |
          echo "API_PROVIDER=openai" >> $GITHUB_ENV  # Or use "gemini" if you want to switch providers

      - name: Generate PR Content with OpenAI or Gemini
        if: ${{ env.API_PROVIDER == 'openai' }}
        run: |
          python python .github/scripts/generate_pr_content.py

      - name: Update PR with generated content (Gemini)
        if: ${{ env.API_PROVIDER == 'gemini' }}
        uses: rubensflinco/gemini-code-review-action@1.0.5
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repository: ${{ github.repository }}
          github_pull_request_number: ${{ github.event.pull_request.number || 0 }}
          git_commit_hash: ${{ github.event.pull_request.head.sha || '' }}
          model: gemini-1.5-pro-latest
          extra_prompt: "Provide a concise summary of the pull request changes."
          temperature: 0.7
          max_tokens: 256
          pull_request_diff: ${{ steps.get_diff.outputs.pull_request_diff }}
